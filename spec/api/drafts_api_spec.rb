=begin
#Dyspatch API

## Introduction  The Dyspatch API is based on the REST paradigm, and features resource based URLs with standard HTTP response codes to indicate errors. We use standard HTTP authentication and request verbs, and all responses are JSON formatted. See our [Implementation Guide](https://docs.dyspatch.io/development/implementing_dyspatch/) for more details on how to implement Dyspatch.  ## API Client Libraries Dyspatch provides API Clients for popular languages and web frameworks.  - [Java](https://github.com/getdyspatch/dyspatch-java) - [Javascript](https://github.com/getdyspatch/dyspatch-javascript) - [Python](https://github.com/getdyspatch/dyspatch-python) - [C#](https://github.com/getdyspatch/dyspatch-dotnet) - [Go](https://github.com/getdyspatch/dyspatch-golang) - [Ruby](https://github.com/getdyspatch/dyspatch-ruby) 

The version of the OpenAPI document: 2020.04
Contact: support@dyspatch.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for DyspatchClient::DraftsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DraftsApi' do
  before do
    # run before each test
    @api_instance = DyspatchClient::DraftsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DraftsApi' do
    it 'should create an instance of DraftsApi' do
      expect(@api_instance).to be_instance_of(DyspatchClient::DraftsApi)
    end
  end

  # unit tests for delete_localization
  # Remove a localization
  # Deletes the localization with the given language ID if it exists
  # @param draft_id A draft ID
  # @param language_id A language ID (eg: en-US)
  # @param accept A version of the API that should be used for the request. For example, to use version \&quot;2020.04\&quot;, set the value to \&quot;application/vnd.dyspatch.2020.04+json\&quot;
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_localization test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_draft_by_id
  # Get Draft by ID
  # Gets a draft object with the matching ID. The \&quot;compiled\&quot; field will contain the template in the default, unlocalized form.
  # @param draft_id A draft ID
  # @param target_language The type of templating language to compile as. Should only be used for visual templates.
  # @param accept A version of the API that should be used for the request. For example, to use version \&quot;2020.04\&quot;, set the value to \&quot;application/vnd.dyspatch.2020.04+json\&quot;
  # @param [Hash] opts the optional parameters
  # @return [DraftRead]
  describe 'get_draft_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_draft_localization_keys
  # Get localization keys
  # Returns the list of values that need to be translated for the draft. Set the &#x60;Accept&#x60; header to &#x60;application/vnd.dyspatch.2020.04+json&#x60; to get a JSON object, or &#x60;text/vnd.dyspatch.2020.04+x-gettext-translation&#x60; to get the POT file.
  # @param draft_id A draft ID
  # @param accept A version of the API that should be used for the request. For example, to use version \&quot;2020.04\&quot;, set the value to \&quot;application/vnd.dyspatch.2020.04+json\&quot;
  # @param [Hash] opts the optional parameters
  # @return [Array<LocalizationKeyRead>]
  describe 'get_draft_localization_keys test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_drafts
  # List Drafts
  # Returns all drafts for your organization.
  # @param accept A version of the API that should be used for the request. For example, to use version \&quot;2020.04\&quot;, set the value to \&quot;application/vnd.dyspatch.2020.04+json\&quot;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor A cursor value used to retrieve a specific page from a paginated result set.
  # @option opts [String] :status Filter the list of drafts by a particular status
  # @return [DraftsRead]
  describe 'get_drafts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_localization_for_draft
  # Get localizations on a draft
  # Returns localization metadata for the draft
  # @param draft_id A draft ID
  # @param accept A version of the API that should be used for the request. For example, to use version \&quot;2020.04\&quot;, set the value to \&quot;application/vnd.dyspatch.2020.04+json\&quot;
  # @param [Hash] opts the optional parameters
  # @return [Array<LocalizationMetaRead>]
  describe 'get_localization_for_draft test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_localization
  # Create or update a localization
  # Inserts a localization or sets the name on an existing localization that already uses the languageId
  # @param draft_id A draft ID
  # @param language_id A language ID (eg: en-US)
  # @param accept A version of the API that should be used for the request. For example, to use version \&quot;2020.04\&quot;, set the value to \&quot;application/vnd.dyspatch.2020.04+json\&quot;
  # @param inline_object 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'save_localization test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_translation
  # Set translations for language
  # Completely replaces any existing translations for the given language with those provided in request body. Variables embedded in keys or values are expected to be in the format &#x60;%(my_variable)s&#x60; and will automatically convert to the correct Dyspatch format depending on the type of template. Accepts key/value pairs in JSON format or in gettext PO file format. For JSON set &#x60;Content-Type&#x60; header to &#x60;application/json&#x60;. For gettext PO format set &#x60;Content-Type&#x60; header to &#x60;text/x-gettext-translation&#x60;.
  # @param draft_id A draft ID
  # @param language_id A language ID (eg: en-US)
  # @param accept A version of the API that should be used for the request. For example, to use version \&quot;2020.04\&quot;, set the value to \&quot;application/vnd.dyspatch.2020.04+json\&quot;
  # @param request_body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'set_translation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for submit_draft_for_approval
  # Submit the draft for approval
  # Moves the draft into submitted state.
  # @param draft_id A draft ID
  # @param accept A version of the API that should be used for the request. For example, to use version \&quot;2020.04\&quot;, set the value to \&quot;application/vnd.dyspatch.2020.04+json\&quot;
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'submit_draft_for_approval test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
